<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	  http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
	  http://www.springframework.org/schema/task
      http://www.springframework.org/schema/task/spring-task.xsd">

    <!-- data source configuration -->
    <import resource="datasource.xml"/>

    <context:component-scan base-package="com.eco">
        <context:include-filter type="regex" expression="com.eco..*Mapper"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- Mybatis sqlSessionFactory and configuration -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="multipleDataSource"></property>
        <property name="configLocation" value="/WEB-INF/mybatis-config.xml"/>
    </bean>
    <!-- Automatically scan dao interface and its corresponding xml file -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.eco.*" />
    </bean>

    <!-- Transaction Manager -->
    <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="multipleDataSource"></property>
        <property name="globalRollbackOnParticipationFailure" value="false" />
    </bean>
    <!-- Declarative transactions with annotation -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!-- Declarative transactions with method prefix -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="delete*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
        </tx:attributes>
    </tx:advice>
    <!-- aspect configuration -->
    <aop:config>
        <aop:pointcut id="serviceOperation"	expression="execution(* com.eco..*.service..*(..))" />
        <aop:advisor advice-ref="txAdvice"	pointcut-ref="serviceOperation" />
    </aop:config>

    <!-- 激活@Aspect注解支持 -->
    <aop:aspectj-autoproxy/>
    <!-- 激活annotation功能 -->
    <context:annotation-config />
    <!-- 激活annotation功能 -->
    <context:spring-configured/>
    <!-- 定时器 -->
    <task:annotation-driven />

    <!-- 根据beanName获取bean实例的工具类 -->
    <bean id="springContextUtil" class="com.eco.pub.utils.SpringContextUtil" lazy-init="false"/>
</beans>